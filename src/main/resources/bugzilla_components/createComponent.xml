<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!--API Documentation URL- http://www.bugzilla.org/docs/tip/en/html/api/Bugzilla/WebService/Component.html#create -->
<template name="createComponent" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="name" description="The name of the component."/>
    <parameter name="product"
               description="The name of the product that the component must be added to."/>
    <parameter name="description" description="The description of the new component."/>
    <parameter name="defaultAssignee"
               description="The login name of the default assignee of the component."/>
    <parameter name="defaultCC"
               description="An array of strings with each element representing one login name of the default CC list."/>
    <parameter name="defaultQaContact"
               description="The login name of the default QA contact for the component."/>
    <parameter name="isOpen"
               description="1 if you want to enable the component for bug creations. 0 otherwise. Default is 1."/>
    <sequence>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.product" expression="$func:product"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.defaultAssignee" expression="$func:defaultAssignee"/>
        <property name="uri.var.defaultCC" expression="$func:defaultCC"/>
        <property name="uri.var.defaultQaContact" expression="$func:defaultQaContact"/>
        <property name="uri.var.isOpen" expression="$func:isOpen"/>
        <payloadFactory media-type="json">
            <format>
                {
                "name":"$1",
                "product":"$2",
                "description":"$3",
                "default_assignee":"$4"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.name')"/>
                <arg expression="get-property('uri.var.product')"/>
                <arg expression="get-property('uri.var.description')"/>
                <arg expression="get-property('uri.var.defaultAssignee')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            payload = mc.getPayloadJSON(); 
            var defaultCC = mc.getProperty('uri.var.defaultCC');
            var defaultQaContact = mc.getProperty('uri.var.defaultQaContact');
            var isOpen = mc.getProperty('uri.var.isOpen');
            if (defaultCC != null && defaultCC != ""){
               payload.default_cc=eval("(" + defaultCC + ")");
            }
            if (defaultQaContact != null && defaultQaContact != ""){
               payload.default_qa_contact=defaultQaContact;
            }
			if (isOpen != null && isOpen != ""){
               if("false"==isOpen.toLowerCase()){
                  payload.is_open=eval("(" + isOpen + ")");
               }else{            
                  payload.is_open=isOpen;
               }
            }
            mc.setPayloadJSON(payload);
         ]]>
        </script>
        <property name="DISABLE_CHUNKING" value="true" scope="axis2"/>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/component{+uri.var.apiKey}"/>
            </endpoint>
        </call>
        <!--Removing custom headers from the Response. -->
        <header name="X-frame-options" action="remove" scope="transport"/>
        <header name="X-xss-protection" action="remove" scope="transport"/>
        <header name="Etag" action="remove" scope="transport"/>
        <header name="X-content-type-options" action="remove" scope="transport"/>
        <header name="Access-control-allow-origin" action="remove" scope="transport"/>
        <header name="Access-control-allow-headers" action="remove" scope="transport"/>
    </sequence>
</template>