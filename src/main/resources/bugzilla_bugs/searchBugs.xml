<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!--API Documentation URL- https://www.bugzilla.org/docs/tip/en/html/api/Bugzilla/WebService/Bug.html#search -->
<template name="searchBugs" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="alias" description="The unique aliases of this bug."/>
    <parameter name="assignedTo" description="The login name of a user that a bug is assigned to."/>
    <parameter name="component" description="The name of the Component that the bug is in."/>
    <parameter name="creationTime"
               description="Searches for bugs that were created at this time or later."/>
    <parameter name="creator" description="The login name of the user who created the bug."/>
    <parameter name="id" description="The numeric id of the bug."/>
    <parameter name="lastChangeTime"
               description="Searches for bugs that were modified at this time or later."/>
    <parameter name="limit" description="Limit the number of results returned to."/>
    <parameter name="offset"
               description="Defines the starting position for the search. Used in conjunction with the limit argument."/>
    <parameter name="opSys" description="The Operating System field of a bug."/>
    <parameter name="platform"
               description="The Platform (sometimes called Hardware) field of a bug."/>
    <parameter name="priority" description="The Priority field on a bug."/>
    <parameter name="product" description="The name of the Product that the bug is in."/>
    <parameter name="resolution" description="The current resolution."/>
    <parameter name="severity" description="The Severity field on a bug."/>
    <parameter name="status" description="The current status of a bug."/>
    <parameter name="summary"
               description="Searches for substrings in the single-line Summary field on bugs."/>
    <parameter name="tags" description="Searches for a bug with the specified tag."/>
    <parameter name="targetMilestone" description="The Target Milestone field of a bug."/>
    <parameter name="qaContact" description="The login name of the bug's QA Contact."/>
    <parameter name="url" description="The URL field of a bug."/>
    <parameter name="version" description="The Version field of a bug."/>
    <parameter name="whiteboard"
               description="Search the Status Whiteboard field on bugs for a substring."/>
    <parameter name="quicksearch" description="Search for bugs using quicksearch syntax."/>
    <parameter name="includeFields"
               description="An array of strings, representing the names of fields in the return value. Only the fields specified in this hash will be returned."/>
    <parameter name="excludeFields"
               description="An array of strings, representing the names of fields in the return value. The fields specified will not be included in the returned hashes."/>
    <sequence>
        <property name="uri.var.alias" expression="$func:alias"/>
        <property name="uri.var.assignedTo" expression="$func:assignedTo"/>
        <property name="uri.var.component" expression="$func:component"/>
        <property name="uri.var.creationTime" expression="$func:creationTime"/>
        <property name="uri.var.creator" expression="$func:creator"/>
        <property name="uri.var.id" expression="$func:id"/>
        <property name="uri.var.lastChangeTime" expression="$func:lastChangeTime"/>
        <property name="uri.var.limit" expression="$func:limit"/>
        <property name="uri.var.offset" expression="$func:offset"/>
        <property name="uri.var.opSys" expression="$func:opSys"/>
        <property name="uri.var.platform" expression="$func:platform"/>
        <property name="uri.var.priority" expression="$func:priority"/>
        <property name="uri.var.product" expression="$func:product"/>
        <property name="uri.var.resolution" expression="$func:resolution"/>
        <property name="uri.var.severity" expression="$func:severity"/>
        <property name="uri.var.status" expression="$func:status"/>
        <property name="uri.var.summary" expression="$func:summary"/>
        <property name="uri.var.tags" expression="$func:tags"/>
        <property name="uri.var.targetMilestone" expression="$func:targetMilestone"/>
        <property name="uri.var.qaContact" expression="$func:qaContact"/>
        <property name="uri.var.url" expression="$func:url"/>
        <property name="uri.var.version" expression="$func:version"/>
        <property name="uri.var.whiteboard" expression="$func:whiteboard"/>
        <property name="uri.var.quicksearch" expression="$func:quicksearch"/>
        <property name="uri.var.includeFields" expression="$func:includeFields"/>
        <property name="uri.var.excludeFields" expression="$func:excludeFields"/>
        <script language="js">
            <![CDATA[
            var alias = mc.getProperty('uri.var.alias');
            var assignedTo = mc.getProperty('uri.var.assignedTo');
            var component = mc.getProperty('uri.var.component');
            var creationTime = mc.getProperty('uri.var.creationTime');
            var creator = mc.getProperty('uri.var.creator');
            var id = mc.getProperty('uri.var.id');
            var lastChangeTime = mc.getProperty('uri.var.lastChangeTime');
            var limit = mc.getProperty('uri.var.limit');
            var offset = mc.getProperty('uri.var.offset');
            var opSys = mc.getProperty('uri.var.opSys');
            var platform = mc.getProperty('uri.var.platform');
            var priority = mc.getProperty('uri.var.priority');
            var product = mc.getProperty('uri.var.product');
            var resolution = mc.getProperty('uri.var.resolution');
            var severity = mc.getProperty('uri.var.severity');
            var status = mc.getProperty('uri.var.status');
            var summary = mc.getProperty('uri.var.summary');
            var tags = mc.getProperty('uri.var.tags');
            var targetMilestone = mc.getProperty('uri.var.targetMilestone');
            var qaContact = mc.getProperty('uri.var.qaContact');
            var url = mc.getProperty('uri.var.url');
            var version = mc.getProperty('uri.var.version');
            var whiteboard = mc.getProperty('uri.var.whiteboard');
            var quicksearch = mc.getProperty('uri.var.quicksearch');
            var includeFields = mc.getProperty('uri.var.includeFields');
            var excludeFields = mc.getProperty('uri.var.excludeFields');
            var urlQuery = '&';
            if (alias != null && alias != ""){
               urlQuery += 'alias=' + alias + '&';
            }
            if (assignedTo != null && assignedTo != ""){
               urlQuery += 'assigned_to=' + assignedTo + '&';
            }
            if (component != null && component != ""){
               urlQuery += 'component=' + encodeURI(component) + '&';
            }
            if (creationTime != null && creationTime != ""){
               urlQuery += 'creation_time=' + creationTime + '&';
            }
            if (creator != null && creator != ""){
               urlQuery += 'creator=' + creator + '&';
            }
            if (id != null && id != ""){
               urlQuery += 'id=' + id + '&';
            }
            if (lastChangeTime != null && lastChangeTime != ""){
               urlQuery += 'last_change_time=' + lastChangeTime + '&';
            }
            if (limit != null && limit != ""){
               urlQuery += 'limit=' + limit + '&';
            }
            if (offset != null && offset != ""){
               urlQuery += 'offset=' + offset + '&';
            }
            if (opSys != null && opSys != ""){
               urlQuery += 'op_sys=' + opSys + '&';
            }
            if (platform != null && platform != ""){
               urlQuery += 'platform=' + platform + '&';
            }
            if (priority != null && priority != ""){
               urlQuery += 'priority=' + priority + '&';
            }
            if (product != null && product != ""){
               urlQuery += 'product=' + encodeURI(product) + '&';
            }
            if (resolution != null && resolution != ""){
               urlQuery += 'resolution=' + encodeURI(resolution) + '&';
            }
            if (severity != null && severity != ""){
               urlQuery += 'severity=' + severity + '&';
            }
            if (status != null && status != ""){
               urlQuery += 'status=' + status + '&';
            }
            if (summary != null && summary != ""){
               urlQuery += 'summary=' + encodeURI(summary) + '&';
            }
            if (tags != null && tags != ""){
               urlQuery += 'tags=' + tags + '&';
            }
            if (targetMilestone != null && targetMilestone != ""){
               urlQuery += 'target_milestone=' + targetMilestone + '&';
            }
            if (qaContact != null && qaContact != ""){
               urlQuery += 'qa_contact=' + qaContact + '&';
            }
            if (url != null && url != ""){
               urlQuery += 'url=' + url + '&';
            }
            if (version != null && version != ""){
               urlQuery += 'version=' + encodeURI(version) + '&';
            }
            if (whiteboard != null && whiteboard != ""){
               urlQuery += 'whiteboard=' + encodeURI(whiteboard)  + '&';
            }
            if (quicksearch != null && quicksearch != ""){
               urlQuery += 'quicksearch=' + encodeURI(quicksearch) + '&';
            }
            if (includeFields != null && includeFields != ""){
               urlQuery += 'include_fields=' + encodeURI(includeFields) + '&';
            }
            if (excludeFields != null && excludeFields != ""){
               urlQuery += 'exclude_fields=' + encodeURI(excludeFields) + '&';
            }
            // Remove the trailing '&'
            urlQuery = urlQuery.substring(0, urlQuery.length - 1);
            mc.setProperty('uri.var.urlQuery', urlQuery);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/bug{+uri.var.apiKey}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!--Removing custom headers from the Response. -->
        <header name="X-frame-options" action="remove" scope="transport"/>
        <header name="X-xss-protection" action="remove" scope="transport"/>
        <header name="X-content-type-options" action="remove" scope="transport"/>
        <header name="Etag" action="remove" scope="transport"/>
        <header name="Access-control-allow-origin" action="remove" scope="transport"/>
        <header name="Access-control-allow-headers" action="remove" scope="transport"/>
    </sequence>
</template>