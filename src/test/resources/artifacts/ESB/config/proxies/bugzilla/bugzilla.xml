<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy name="bugzilla" startOnLoad="true" statistics="disable" trace="disable"
       transports="https,http" xmlns="http://ws.apache.org/ns/synapse">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiKey" expression="json-eval($.apiKey)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="description" expression="json-eval($.description)"/>
            <property name="version" expression="json-eval($.version)"/>
            <property name="hasUnconfirmed" expression="json-eval($.hasUnconfirmed)"/>
            <property name="isOpen" expression="json-eval($.isOpen)"/>
            <property name="ids" expression="json-eval($.ids)"/>
            <property name="names" expression="json-eval($.names)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="product" expression="json-eval($.product)"/>
            <property name="defaultAssignee" expression="json-eval($.defaultAssignee)"/>
            <property name="excludeFields" expression="json-eval($.excludeFields)"/>
            <property name="includeFields" expression="json-eval($.includeFields)"/>
            <property name="email" expression="json-eval($.email)"/>
            <property name="fullName" expression="json-eval($.fullName)"/>
            <property name="component" expression="json-eval($.component)"/>
            <property name="summary" expression="json-eval($.summary)"/>
            <property name="opSys" expression="json-eval($.opSys)"/>
            <property name="platform" expression="json-eval($.platform)"/>
            <property name="priority" expression="json-eval($.priority)"/>
            <property name="severity" expression="json-eval($.severity)"/>
            <property name="alias" expression="json-eval($.alias)"/>
            <property name="assignedTo" expression="json-eval($.assignedTo)"/>
            <property name="cc" expression="json-eval($.cc)"/>
            <property name="status" expression="json-eval($.status)"/>
            <property name="customFields" expression="json-eval($.customFields)"/>
            <property name="id" expression="json-eval($.id)"/>
            <property name="creationTime" expression="json-eval($.creationTime)"/>
            <property name="bugId" expression="json-eval($.bugId)"/>
            <property name="deadline" expression="json-eval($.deadline)"/>
            <property name="whiteboard" expression="json-eval($.whiteboard)"/>
            <property name="url" expression="json-eval($.url)"/>
            <bugzilla.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiKey>{$ctx:apiKey}</apiKey>
            </bugzilla.init>
            <switch source="get-property('transport','Action')">
                <case regex="urn:createProduct">
                    <bugzilla.createProduct>
                        <name>{$ctx:name}</name>
                        <description>{$ctx:description}</description>
                        <version>{$ctx:version}</version>
                        <hasUnconfirmed>{$ctx:hasUnconfirmed}</hasUnconfirmed>
                        <isOpen>{$ctx:isOpen}</isOpen>
                    </bugzilla.createProduct>
                </case>
                <case regex="urn:searchProducts">
                    <bugzilla.searchProducts>
                        <ids>{$ctx:ids}</ids>
                        <names>{$ctx:names}</names>
                        <type>{$ctx:type}</type>
                        <excludeFields>{$ctx:excludeFields}</excludeFields>
                        <includeFields>{$ctx:includeFields}</includeFields>
                    </bugzilla.searchProducts>
                </case>
                <case regex="urn:createComponent">
                    <bugzilla.createComponent>
                        <name>{$ctx:name}</name>
                        <product>{$ctx:product}</product>
                        <description>{$ctx:description}</description>
                        <defaultAssignee>{$ctx:defaultAssignee}</defaultAssignee>
                        <isOpen>{$ctx:isOpen}</isOpen>
                    </bugzilla.createComponent>
                </case>
                <case regex="urn:createUser">
                    <bugzilla.createUser>
                        <email>{$ctx:email}</email>
                        <fullName>{$ctx:fullName}</fullName>
                    </bugzilla.createUser>
                </case>
                <case regex="urn:searchUsers">
                    <bugzilla.searchUsers>
                        <ids>{$ctx:ids}</ids>
                    </bugzilla.searchUsers>
                </case>
                <case regex="urn:createBug">
                    <bugzilla.createBug>
                        <product>{$ctx:product}</product>
                        <component>{$ctx:component}</component>
                        <summary>{$ctx:summary}</summary>
                        <version>{$ctx:version}</version>
                        <description>{$ctx:description}</description>
                        <opSys>{$ctx:opSys}</opSys>
                        <platform>{$ctx:platform}</platform>
                        <priority>{$ctx:priority}</priority>
                        <severity>{$ctx:severity}</severity>
                        <alias>{$ctx:alias}</alias>
                        <assignedTo>{$ctx:assignedTo}</assignedTo>
                        <cc>{$ctx:cc}</cc>
                        <status>{$ctx:status}</status>
                        <customFields>{$ctx:customFields}</customFields>
                    </bugzilla.createBug>
                </case>
                <case regex="urn:getBug">
                    <bugzilla.getBug>
                        <id>{$ctx:id}</id>
                        <includeFields>{$ctx:includeFields}</includeFields>
                        <excludeFields>{$ctx:excludeFields}</excludeFields>
                    </bugzilla.getBug>
                </case>
                <case regex="urn:searchBugs">
                    <bugzilla.searchBugs>
                        <priority>{$ctx:priority}</priority>
                        <severity>{$ctx:severity}</severity>
                        <version>{$ctx:version}</version>
                        <opSys>{$ctx:opSys}</opSys>
                        <platform>{$ctx:platform}</platform>
                        <creationTime>{$ctx:creationTime}</creationTime>
                    </bugzilla.searchBugs>
                </case>
                <case regex="urn:updateBug">
                    <bugzilla.updateBug>
                        <bugId>{$ctx:bugId}</bugId>
                        <summary>{$ctx:summary}</summary>
                        <assignedTo>{$ctx:assignedTo}</assignedTo>
                        <deadline>{$ctx:deadline}</deadline>
                        <whiteboard>{$ctx:whiteboard}</whiteboard>
                        <url>{$ctx:url}</url>
                    </bugzilla.updateBug>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>